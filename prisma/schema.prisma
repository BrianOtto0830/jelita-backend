// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String   @db.Text
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tickets   Ticket[]
}

enum Role {
  ADMIN
  USER
}

model Bus {
  id          Int      @id @default(autoincrement())
  plateNumber String   @unique
  capacity    Int
  crew        String
  status      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  routes      Route[]
}

model Route {
  id          Int      @id @default(autoincrement())
  origin      String
  destination String
  price       Float
  busId       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  bus         Bus      @relation(fields: [busId], references: [id])
  tickets     Ticket[]
}

model Ticket {
  id          Int      @id @default(autoincrement())
  userId      Int
  routeId     Int
  seatNumber  Int
  status      TicketStatus @default(BOOKED)
  bookedAt    DateTime @default(now())
  Transaction Transaction[]

  user        User      @relation(fields: [userId], references: [id])
  route       Route     @relation(fields: [routeId], references: [id])
}

enum TicketStatus {
  BOOKED
  CANCELLED
  COMPLETED
}

model Transaction {
  id          Int      @id @default(autoincrement())
  amount      Float
  type        TransactionType
  description String?
  createdAt   DateTime @default(now())

  ticketId    Int?
  ticket      Ticket?  @relation(fields: [ticketId], references: [id], onDelete: Cascade)
}

enum TransactionType {
  INCOME
  EXPENSE
}